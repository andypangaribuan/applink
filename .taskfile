#!/bin/bash

# Copyright (c) 2024.
# Created by Andy Pangaribuan. All Rights Reserved.
#
# This product is protected by copyright and distributed under
# licenses restricting copying, distribution and decompilation.

# make executable: $ chmod +x .taskfile
# make alias:
# - $ subl ~/.zshrc
# - add line: alias task="./.taskfile"
# run with $ task

function help {
  cat .taskfile | \
  sed 's/#: space/&\nfunction space {/g' | \
  grep -B1 -E '^[[:space:]]*([[:alnum:]_]+[[:space:]]*\(\)|function[[:space:]]+[[:alnum:]_]+)' | \
  sed '/function help {/d' | \
  sed -r 's/function //' | \
  sed -r 's/ \{/:/' | \
  grep -v -- -- | \
  sed '/^\s*$/d' | \
  sed 'N;s/\n/###/' | \
  sed -n 's/^#: \(.*\)###\(.*\):.*/\2###→ \1/p' | \
  column -t -s '###' | \
  sed 's/.*→ space.*//g'
}


image_name=ghcr.io/andypangaribuan/applink


#: update + check
function run {
  go mod tidy
  go vet
  gofmt -l .
  golangci-lint run
  staticcheck ./...
}


#: build image using version from README.md
function build {
  arc=$(uname -m)
  ver=$(cat README.md | grep "^Version: " | sed -r 's/Version: //')
  image="$image_name:$ver-$arc"

  echo "remove existing image"
  docker rmi $image

  echo -e "\n\n"
  echo "perform docker build"
  docker build --no-cache -f res/Dockerfile -t $image .  || { exit 1; }

  echo -e "\n\n"
  echo "image: $image"

  echo -e "\n\n"
  echo "perform cleansing"

  docker container prune -f
  docker image prune -f
  docker builder prune -f

  echo -e "\n\n"
  echo "push to github"
  echo "docker push $image"

  echo -e "\n\n"
  echo "remove image"
  echo "docker rmi $image"
}


#: save image using gzip
function save {
  arc=$(uname -m)
  ver=$(cat README.md | grep "^Version: " | sed -r 's/Version: //')
  image="$image_name:$ver-$arc"

  rm -rf $image.tar.gz
  docker save $image | gzip > applink-$ver-$arc.tar.gz
}


#: load image from tar.gz
function load {
  arc=$(uname -m)
  ver=$(cat README.md | grep "^Version: " | sed -r 's/Version: //')
  image="$image_name:$ver-$arc"

  docker load < applink-$ver-$arc.tar.gz
}


#: docker clean
function clean {
  docker container prune -f
  docker image prune -f
  docker builder prune -f
}


#: space

# ___ do not change ___
case $1 in
  "") help ;;
  *) "$@" ;;
esac
